
heat_template_version: 2017-09-01

description: >
    Template to deploy an SQL server, outputs its IP address.
    This template creates a database within the server (a name must be provided).

    # Created by Dimitri Pertin


parameters:
    # Parameters used to describe the server resource
    ServerName:
        label: Name of the Server
        type: string
        default: database
    ServerKeyName:
        label: Name of the SSH key to provide to cloud-init
        type: string
        default: admin
    ServerImage:
        label: Name of the image used to boot the server
        type: string
        default: alpine
    ServerFlavor:
        label: Name of the flavor used to boot the server
        type: string
        default: m1.tiny
    ServerNetwork:
        label: Name of the network the server will be linked to
        type: string
        default: private

    # Parameters used in the cloud-init script to install & configure MariaDB
    DBRootPassword:
        label: Value of the password to manage the database
        type: string
        default: 0p3nSt4cK
    DBName:
        label: Name of the database to create
        type: string
    DBUser:
        label: Name of the database user
        type: string
        default: silr
    DBPassword:
        label: Password to access the database
        type: string
        default: silr

resources:
    mysql_instance:
        type: OS::Nova::Server
        properties:
            name: { get_param: ServerName }
            key_name: { get_param: ServerKeyName }
            image: { get_param: ServerImage }
            flavor: { get_param: ServerFlavor }
            networks:
                - network: { get_param: ServerNetwork }
            user_data_format: RAW
            user_data:
                str_replace:
                    params:
                        ${DB_ROOTPASSWORD}: { get_param: DBRootPassword }
                        ${DB_NAME}: { get_param: DBName }
                        ${DB_USER}: { get_param: DBUser }
                        ${DB_PASSWORD}: { get_param: DBPassword }
                    template: |
                        #!/usr/bin/env ash
                        # Install and configure MariaDB for Alpine.

                        MAX_ALLOWED_PACKET="200M"

                        # Install MariaDB
                        apk update
                        apk add mariadb mariadb-client
                        
                        mysql_install_db --user="mysql" --datadir="/var/lib/mysql"

                        rc-service mariadb start

                        # Setup MySQL root password and create a user and add remote privs to app subnet
                        mysqladmin -u root password ${DB_ROOTPASSWORD}

                        # Create the wordpress database
                        cat << EOSQL | mysql -u root --password=${DB_ROOTPASSWORD}
                        FLUSH PRIVILEGES;
                        CREATE USER '${DB_USER}'@'localhost';
                        CREATE DATABASE ${DB_NAME};
                        SET PASSWORD FOR '${DB_USER}'@'localhost'=PASSWORD("${DB_PASSWORD}");
                        GRANT ALL PRIVILEGES ON ${DB_NAME}.* TO '${DB_USER}'@'localhost' IDENTIFIED BY '${DB_PASSWORD}';
                        CREATE USER '${DB_USER}'@'%';
                        SET PASSWORD FOR '${DB_USER}'@'%'=PASSWORD("${DB_PASSWORD}");
                        GRANT ALL PRIVILEGES ON ${DB_NAME}.* TO '${DB_USER}'@'%' IDENTIFIED BY '${DB_PASSWORD}';
                        EOSQL

                        sed -i "s|max_allowed_packet\s*=\s*1M|max_allowed_packet = ${MAX_ALLOWED_PACKET}|g" /etc/mysql/my.cnf
                        sed -i "s|max_allowed_packet\s*=\s*16M|max_allowed_packet = ${MAX_ALLOWED_PACKET}|g" /etc/mysql/my.cnf

                        rc-update add mariadb default
                        rc-service mariadb restart

outputs:
    DBHost:
        description: IP address of the created instance running MariaDB
        value: { get_attr: [mysql_instance, first_address] }

